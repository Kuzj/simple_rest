<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2020-10-20T12:05:37Z</date>
    <media_types>
        <media_type>
            <name>icq_simple_rest</name>
            <type>WEBHOOK</type>
            <parameters>
                <parameter>
                    <name>bot_name</name>
                    <value/>
                </parameter>
                <parameter>
                    <name>chat</name>
                    <value/>
                </parameter>
                <parameter>
                    <name>endpoint</name>
                    <value/>
                </parameter>
                <parameter>
                    <name>message</name>
                    <value>{ALERT.MESSAGE}</value>
                </parameter>
                <parameter>
                    <name>method</name>
                    <value>send_message</value>
                </parameter>
                <parameter>
                    <name>name</name>
                    <value>icq</value>
                </parameter>
            </parameters>
            <script>try {&#13;
	Zabbix.Log(127, 'simple_rest webhook script value='+value);&#13;
    &#13;
	var params = JSON.parse(value),&#13;
	req = new CurlHttpRequest(),&#13;
	fields = {},&#13;
	resp;&#13;
 &#13;
	req.AddHeader('Content-Type: application/json');&#13;
 &#13;
	fields.bot_name = params.bot_name;&#13;
	fields.chat = params.chat;&#13;
	fields.message = params.message;&#13;
        fields.method = params.method;&#13;
        fields.name = params.name;&#13;
        resp = req.Post(params.endpoint,&#13;
		JSON.stringify({&quot;action&quot;: fields})&#13;
	);&#13;
 &#13;
	if (req.Status() != 201) {&#13;
		throw 'Response code: '+req.Status();&#13;
	}&#13;
 &#13;
	resp = JSON.parse(resp);&#13;
        result = resp;&#13;
} catch (error) {&#13;
	Zabbix.Log(127, 'simple rest failed json : '+JSON.stringify({&quot;fields&quot;: fields}));&#13;
	Zabbix.Log(127, 'simple rest creation failed : '+error);&#13;
 &#13;
    result = {};&#13;
}&#13;
return result;</script>
            <message_templates>
                <message_template>
                    <event_source>TRIGGERS</event_source>
                    <operation_mode>PROBLEM</operation_mode>
                    <subject>Problem: {EVENT.NAME}</subject>
                    <message>Problem started at {EVENT.TIME} on {EVENT.DATE}&#13;
Problem name: {EVENT.NAME}&#13;
Host: {HOST.NAME}&#13;
Severity: {EVENT.SEVERITY}&#13;
Operational data: {EVENT.OPDATA}&#13;
Original problem ID: {EVENT.ID}&#13;
{TRIGGER.URL}</message>
                </message_template>
                <message_template>
                    <event_source>TRIGGERS</event_source>
                    <operation_mode>RECOVERY</operation_mode>
                    <subject>Resolved in {EVENT.DURATION}: {EVENT.NAME}</subject>
                    <message>Problem has been resolved at {EVENT.RECOVERY.TIME} on {EVENT.RECOVERY.DATE}&#13;
Problem name: {EVENT.NAME}&#13;
Problem duration: {EVENT.DURATION}&#13;
Host: {HOST.NAME}&#13;
Severity: {EVENT.SEVERITY}&#13;
Original problem ID: {EVENT.ID}&#13;
{TRIGGER.URL}</message>
                </message_template>
            </message_templates>
        </media_type>
    </media_types>
</zabbix_export>
